var documenterSearchIndex = {"docs":
[{"location":"#TransducersBenchmarksReports.jl-1","page":"Home","title":"TransducersBenchmarksReports.jl","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"","category":"page"},{"location":"generated/results/#Benchmark-Report-for-*/home/travis/.julia/packages/Transducers/jTysw*-1","page":"Results","title":"Benchmark Report for /home/travis/.julia/packages/Transducers/jTysw","text":"","category":"section"},{"location":"generated/results/#Job-Properties-1","page":"Results","title":"Job Properties","text":"","category":"section"},{"location":"generated/results/#","page":"Results","title":"Results","text":"Time of benchmark: 13 Jul 2019 - 23:50\nPackage commit: non gi\nJulia commit: 55e36c\nJulia command flags: None\nEnvironment variables: OMP_NUM_THREADS => 1 JULIA_NUM_THREADS => 1","category":"page"},{"location":"generated/results/#Results-1","page":"Results","title":"Results","text":"","category":"section"},{"location":"generated/results/#","page":"Results","title":"Results","text":"Below is a table of this job's results, obtained by running the benchmarks. The values listed in the ID column have the structure [parent_group, child_group, ..., key], and can be used to index into the BaseBenchmarks suite to retrieve the corresponding benchmarks. The percentages accompanying time and memory values in the below table are noise tolerances. The \"true\" time/memory value for a given benchmark is expected to fall within this percentage of the reported value. An empty cell means that the value was zero.","category":"page"},{"location":"generated/results/#","page":"Results","title":"Results","text":"ID time GC time memory allocations\n[\"dot\", \"blas\"] 2.194 μs (5%)   \n[\"dot\", \"man\"] 2.161 μs (5%)   \n[\"dot\", \"rf\"] 2.143 μs (5%)   \n[\"dot\", \"xf\"] 2.145 μs (5%)   \n[\"filter_map_map!\", \"man\"] 74.091 μs (5%)   \n[\"filter_map_map!\", \"xf\"] 77.400 μs (5%)  144 bytes (1%) 8\n[\"filter_map_reduce\", \"man\"] 266.142 μs (5%)   \n[\"filter_map_reduce\", \"xf\"] 266.280 μs (5%)   \n[\"gemm\", \"linalg\", \"256\"] 1.175 ms (5%)   \n[\"gemm\", \"linalg\", \"32\"] 4.988 μs (5%)   \n[\"gemm\", \"linalg\", \"8\"] 349.839 ns (5%)   \n[\"gemm\", \"man\", \"false\", \"256\"] 3.970 ms (5%)   \n[\"gemm\", \"man\", \"false\", \"32\"] 7.972 μs (5%)   \n[\"gemm\", \"man\", \"false\", \"8\"] 481.790 ns (5%)   \n[\"gemm\", \"man\", \"ivdep\", \"256\"] 3.941 ms (5%)   \n[\"gemm\", \"man\", \"ivdep\", \"32\"] 7.263 μs (5%)   \n[\"gemm\", \"man\", \"ivdep\", \"8\"] 426.854 ns (5%)   \n[\"gemm\", \"man\", \"true\", \"256\"] 3.972 ms (5%)   \n[\"gemm\", \"man\", \"true\", \"32\"] 8.363 μs (5%)   \n[\"gemm\", \"man\", \"true\", \"8\"] 460.731 ns (5%)   \n[\"gemm\", \"xf\", \"false\", \"256\"] 16.341 ms (5%)  96 bytes (1%) 4\n[\"gemm\", \"xf\", \"false\", \"32\"] 32.671 μs (5%)  96 bytes (1%) 4\n[\"gemm\", \"xf\", \"false\", \"8\"] 670.605 ns (5%)  96 bytes (1%) 4\n[\"gemm\", \"xf\", \"ivdep\", \"256\"] 3.998 ms (5%)  96 bytes (1%) 4\n[\"gemm\", \"xf\", \"ivdep\", \"32\"] 8.524 μs (5%)  96 bytes (1%) 4\n[\"gemm\", \"xf\", \"ivdep\", \"8\"] 570.663 ns (5%)  96 bytes (1%) 4\n[\"gemm\", \"xf\", \"true\", \"256\"] 15.347 ms (5%)  96 bytes (1%) 4\n[\"gemm\", \"xf\", \"true\", \"32\"] 31.381 μs (5%)  96 bytes (1%) 4\n[\"gemm\", \"xf\", \"true\", \"8\"] 744.480 ns (5%)  96 bytes (1%) 4\n[\"missing_argmax\", \"man\"] 1.365 μs (5%)  32 bytes (1%) 1\n[\"missing_argmax\", \"rf\"] 1.493 μs (5%)  32 bytes (1%) 1\n[\"missing_argmax\", \"xf\"] 1.513 μs (5%)  32 bytes (1%) 1\n[\"missing_dot\", \"equiv\"] 1.603 μs (5%)  16 bytes (1%) 1\n[\"missing_dot\", \"man\"] 1.496 μs (5%)  16 bytes (1%) 1\n[\"missing_dot\", \"naive\"] 5.231 μs (5%)  16 bytes (1%) 1\n[\"missing_dot\", \"rf\"] 1.503 μs (5%)  16 bytes (1%) 1\n[\"missing_dot\", \"rf_nota\"] 1.644 μs (5%)  16 bytes (1%) 1\n[\"missing_dot\", \"xf\"] 238.830 μs (5%)  74.08 KiB (1%) 3863\n[\"missing_dot\", \"xf_nota\"] 228.571 μs (5%)  73.69 KiB (1%) 3849\n[\"partition_by\", \"man\"] 2.227 ms (5%)  352 bytes (1%) 4\n[\"partition_by\", \"xf\"] 2.088 ms (5%)  512 bytes (1%) 8","category":"page"},{"location":"generated/results/#Benchmark-Group-List-1","page":"Results","title":"Benchmark Group List","text":"","category":"section"},{"location":"generated/results/#","page":"Results","title":"Results","text":"Here's a list of all the benchmark groups executed by this job:","category":"page"},{"location":"generated/results/#","page":"Results","title":"Results","text":"[\"dot\"]\n[\"filter_map_map!\"]\n[\"filter_map_reduce\"]\n[\"gemm\", \"linalg\"]\n[\"gemm\", \"man\", \"false\"]\n[\"gemm\", \"man\", \"ivdep\"]\n[\"gemm\", \"man\", \"true\"]\n[\"gemm\", \"xf\", \"false\"]\n[\"gemm\", \"xf\", \"ivdep\"]\n[\"gemm\", \"xf\", \"true\"]\n[\"missing_argmax\"]\n[\"missing_dot\"]\n[\"partition_by\"]","category":"page"},{"location":"generated/results/#Julia-versioninfo-1","page":"Results","title":"Julia versioninfo","text":"","category":"section"},{"location":"generated/results/#","page":"Results","title":"Results","text":"Julia Version 1.1.1\nCommit 55e36cc308 (2019-05-16 04:10 UTC)\nPlatform Info:\n  OS: Linux (x86_64-pc-linux-gnu)\n      Ubuntu 16.04.6 LTS\n  uname: Linux 4.15.0-1028-gcp #29~16.04.1-Ubuntu SMP Tue Feb 12 16:31:10 UTC 2019 x86_64 x86_64\n  CPU: Intel(R) Xeon(R) CPU @ 2.30GHz: \n              speed         user         nice          sys         idle          irq\n       #1  2300 MHz      16260 s          0 s       1509 s      27839 s          0 s\n       #2  2300 MHz      28988 s          0 s       1470 s      16414 s          0 s\n       \n  Memory: 7.297840118408203 GB (5261.46484375 MB free)\n  Uptime: 473.0 sec\n  Load Avg:  1.005859375  0.87255859375  0.46630859375\n  WORD_SIZE: 64\n  LIBM: libopenlibm\n  LLVM: libLLVM-6.0.1 (ORCJIT, haswell)","category":"page"},{"location":"gemm/#bench_gemm.jl-result-1","page":"GEMM","title":"bench_gemm.jl result","text":"","category":"section"},{"location":"gemm/#","page":"GEMM","title":"GEMM","text":"Base.include(@__MODULE__, \"../reporters/gemm.jl\")\nopen(io -> show(io, \"image/png\", plt), \"gemm.png\", \"w\")","category":"page"},{"location":"gemm/#","page":"GEMM","title":"GEMM","text":"(Image: )","category":"page"}]
}
