var documenterSearchIndex = {"docs":
[{"location":"#TransducersBenchmarksReports.jl-1","page":"Home","title":"TransducersBenchmarksReports.jl","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"","category":"page"},{"location":"generated/results/#Benchmark-Report-for-*/home/travis/.julia/packages/Transducers/Xh7La*-1","page":"Results","title":"Benchmark Report for /home/travis/.julia/packages/Transducers/Xh7La","text":"","category":"section"},{"location":"generated/results/#Job-Properties-1","page":"Results","title":"Job Properties","text":"","category":"section"},{"location":"generated/results/#","page":"Results","title":"Results","text":"Time of benchmark: 15 Jul 2019 - 3:55\nPackage commit: non gi\nJulia commit: 55e36c\nJulia command flags: None\nEnvironment variables: OMP_NUM_THREADS => 1 JULIA_NUM_THREADS => 1","category":"page"},{"location":"generated/results/#Results-1","page":"Results","title":"Results","text":"","category":"section"},{"location":"generated/results/#","page":"Results","title":"Results","text":"Below is a table of this job's results, obtained by running the benchmarks. The values listed in the ID column have the structure [parent_group, child_group, ..., key], and can be used to index into the BaseBenchmarks suite to retrieve the corresponding benchmarks. The percentages accompanying time and memory values in the below table are noise tolerances. The \"true\" time/memory value for a given benchmark is expected to fall within this percentage of the reported value. An empty cell means that the value was zero.","category":"page"},{"location":"generated/results/#","page":"Results","title":"Results","text":"ID time GC time memory allocations\n[\"dot\", \"blas\"] 2.191 μs (5%)   \n[\"dot\", \"man\"] 2.165 μs (5%)   \n[\"dot\", \"rf\"] 2.145 μs (5%)   \n[\"dot\", \"xf\"] 2.164 μs (5%)   \n[\"filter_map_map!\", \"man\"] 76.584 μs (5%)   \n[\"filter_map_map!\", \"xf\"] 80.695 μs (5%)  144 bytes (1%) 8\n[\"filter_map_reduce\", \"man\"] 266.413 μs (5%)   \n[\"filter_map_reduce\", \"xf\"] 266.433 μs (5%)   \n[\"gemm\", \"fusedmul\", \"blas\", \"16\"] 6.558 ms (5%)   \n[\"gemm\", \"fusedmul\", \"blas\", \"2\"] 4.814 ms (5%)   \n[\"gemm\", \"fusedmul\", \"blas\", \"32\"] 9.268 ms (5%)   \n[\"gemm\", \"fusedmul\", \"blas\", \"8\"] 5.192 ms (5%)   \n[\"gemm\", \"fusedmul\", \"xf\", \"16\"] 6.091 ms (5%)  160 bytes (1%) 6\n[\"gemm\", \"fusedmul\", \"xf\", \"2\"] 740.496 μs (5%)  160 bytes (1%) 6\n[\"gemm\", \"fusedmul\", \"xf\", \"32\"] 12.270 ms (5%)  160 bytes (1%) 6\n[\"gemm\", \"fusedmul\", \"xf\", \"8\"] 3.023 ms (5%)  160 bytes (1%) 6\n[\"gemm\", \"mul\", \"linalg\", \"256\"] 1.177 ms (5%)   \n[\"gemm\", \"mul\", \"linalg\", \"32\"] 4.742 μs (5%)   \n[\"gemm\", \"mul\", \"linalg\", \"8\"] 352.712 ns (5%)   \n[\"gemm\", \"mul\", \"man\", \"false\", \"256\"] 3.980 ms (5%)   \n[\"gemm\", \"mul\", \"man\", \"false\", \"32\"] 7.915 μs (5%)   \n[\"gemm\", \"mul\", \"man\", \"false\", \"8\"] 478.790 ns (5%)   \n[\"gemm\", \"mul\", \"man\", \"ivdep\", \"256\"] 3.952 ms (5%)   \n[\"gemm\", \"mul\", \"man\", \"ivdep\", \"32\"] 7.209 μs (5%)   \n[\"gemm\", \"mul\", \"man\", \"ivdep\", \"8\"] 424.402 ns (5%)   \n[\"gemm\", \"mul\", \"man\", \"true\", \"256\"] 3.980 ms (5%)   \n[\"gemm\", \"mul\", \"man\", \"true\", \"32\"] 8.310 μs (5%)   \n[\"gemm\", \"mul\", \"man\", \"true\", \"8\"] 460.543 ns (5%)   \n[\"gemm\", \"mul\", \"xf\", \"false\", \"256\"] 16.330 ms (5%)  48 bytes (1%) 2\n[\"gemm\", \"mul\", \"xf\", \"false\", \"32\"] 32.033 μs (5%)  48 bytes (1%) 2\n[\"gemm\", \"mul\", \"xf\", \"false\", \"8\"] 602.073 ns (5%)  48 bytes (1%) 2\n[\"gemm\", \"mul\", \"xf\", \"ivdep\", \"256\"] 3.943 ms (5%)  48 bytes (1%) 2\n[\"gemm\", \"mul\", \"xf\", \"ivdep\", \"32\"] 6.814 μs (5%)  48 bytes (1%) 2\n[\"gemm\", \"mul\", \"xf\", \"ivdep\", \"8\"] 489.670 ns (5%)  48 bytes (1%) 2\n[\"gemm\", \"mul\", \"xf\", \"true\", \"256\"] 15.332 ms (5%)  48 bytes (1%) 2\n[\"gemm\", \"mul\", \"xf\", \"true\", \"32\"] 31.458 μs (5%)  48 bytes (1%) 2\n[\"gemm\", \"mul\", \"xf\", \"true\", \"8\"] 719.708 ns (5%)  48 bytes (1%) 2\n[\"missing_argmax\", \"man\"] 1.363 μs (5%)  32 bytes (1%) 1\n[\"missing_argmax\", \"rf\"] 1.501 μs (5%)  32 bytes (1%) 1\n[\"missing_argmax\", \"xf\"] 1.503 μs (5%)  32 bytes (1%) 1\n[\"missing_dot\", \"equiv\"] 1.609 μs (5%)  16 bytes (1%) 1\n[\"missing_dot\", \"man\"] 1.500 μs (5%)  16 bytes (1%) 1\n[\"missing_dot\", \"naive\"] 5.240 μs (5%)  16 bytes (1%) 1\n[\"missing_dot\", \"rf\"] 1.499 μs (5%)  16 bytes (1%) 1\n[\"missing_dot\", \"rf_nota\"] 1.635 μs (5%)  16 bytes (1%) 1\n[\"missing_dot\", \"xf\"] 240.157 μs (5%)  74.23 KiB (1%) 3870\n[\"missing_dot\", \"xf_nota\"] 234.977 μs (5%)  74.09 KiB (1%) 3868\n[\"partition_by\", \"man\"] 2.261 ms (5%)  352 bytes (1%) 4\n[\"partition_by\", \"xf\"] 2.083 ms (5%)  512 bytes (1%) 8","category":"page"},{"location":"generated/results/#Benchmark-Group-List-1","page":"Results","title":"Benchmark Group List","text":"","category":"section"},{"location":"generated/results/#","page":"Results","title":"Results","text":"Here's a list of all the benchmark groups executed by this job:","category":"page"},{"location":"generated/results/#","page":"Results","title":"Results","text":"[\"dot\"]\n[\"filter_map_map!\"]\n[\"filter_map_reduce\"]\n[\"gemm\", \"fusedmul\", \"blas\"]\n[\"gemm\", \"fusedmul\", \"xf\"]\n[\"gemm\", \"mul\", \"linalg\"]\n[\"gemm\", \"mul\", \"man\", \"false\"]\n[\"gemm\", \"mul\", \"man\", \"ivdep\"]\n[\"gemm\", \"mul\", \"man\", \"true\"]\n[\"gemm\", \"mul\", \"xf\", \"false\"]\n[\"gemm\", \"mul\", \"xf\", \"ivdep\"]\n[\"gemm\", \"mul\", \"xf\", \"true\"]\n[\"missing_argmax\"]\n[\"missing_dot\"]\n[\"partition_by\"]","category":"page"},{"location":"generated/results/#Julia-versioninfo-1","page":"Results","title":"Julia versioninfo","text":"","category":"section"},{"location":"generated/results/#","page":"Results","title":"Results","text":"Julia Version 1.1.1\nCommit 55e36cc308 (2019-05-16 04:10 UTC)\nPlatform Info:\n  OS: Linux (x86_64-pc-linux-gnu)\n      Ubuntu 16.04.6 LTS\n  uname: Linux 4.15.0-1028-gcp #29~16.04.1-Ubuntu SMP Tue Feb 12 16:31:10 UTC 2019 x86_64 x86_64\n  CPU: Intel(R) Xeon(R) CPU @ 2.30GHz: \n              speed         user         nice          sys         idle          irq\n       #1  2300 MHz      25695 s          0 s       1510 s      28238 s          0 s\n       #2  2300 MHz      29037 s          0 s       1446 s      25921 s          0 s\n       \n  Memory: 7.297840118408203 GB (5201.4296875 MB free)\n  Uptime: 570.0 sec\n  Load Avg:  1.0  0.8984375  0.5126953125\n  WORD_SIZE: 64\n  LIBM: libopenlibm\n  LLVM: libLLVM-6.0.1 (ORCJIT, haswell)","category":"page"},{"location":"gemm/#bench_gemm.jl-result-1","page":"GEMM","title":"bench_gemm.jl result","text":"","category":"section"},{"location":"gemm/#mul!-1","page":"GEMM","title":"mul!","text":"","category":"section"},{"location":"gemm/#","page":"GEMM","title":"GEMM","text":"Base.include(@__MODULE__, \"../reporters/gemm.jl\")\nopen(io -> show(io, \"image/png\", plt), \"gemm.png\", \"w\")","category":"page"},{"location":"gemm/#","page":"GEMM","title":"GEMM","text":"(Image: )","category":"page"},{"location":"gemm/#Transducers-vs-manual-implementation-1","page":"GEMM","title":"Transducers vs manual implementation","text":"","category":"section"},{"location":"gemm/#","page":"GEMM","title":"GEMM","text":"using BenchmarkTools\nusing PkgBenchmark: benchmarkgroup, export_markdown\nusing TransducersBenchmarksReports: loadresult\nusing Setfield: @set\nusing Markdown\n\nresults = loadresult()\ngroup = benchmarkgroup(results)[\"gemm\"][\"mul\"]\nresults_xf = @set results.benchmarkgroup = group[\"xf\"]\nresults_man = @set results.benchmarkgroup = group[\"man\"]\n\nlet md = sprint(export_markdown, judge(results_xf, results_man))\n    md = replace(md, \":x:\" => \"❌\")\n    md = replace(md, \":white_check_mark:\" => \"✅\")\n    Markdown.parse(md)\nend","category":"page"},{"location":"gemm/#Fused-mul!-1","page":"GEMM","title":"Fused mul!","text":"","category":"section"},{"location":"gemm/#","page":"GEMM","title":"GEMM","text":"Base.include(@__MODULE__, \"../reporters/gemm_fused_mul.jl\")\nopen(io -> show(io, \"image/png\", plt), \"gemm_fused_mul.png\", \"w\")","category":"page"},{"location":"gemm/#","page":"GEMM","title":"GEMM","text":"(Image: )","category":"page"},{"location":"gemm/#Transducers-vs-BLAS-1","page":"GEMM","title":"Transducers vs BLAS","text":"","category":"section"},{"location":"gemm/#","page":"GEMM","title":"GEMM","text":"using BenchmarkTools\nusing PkgBenchmark: benchmarkgroup, export_markdown\nusing TransducersBenchmarksReports: loadresult\nusing Setfield: @set\nusing Markdown\n\nresults = loadresult()\ngroup = benchmarkgroup(results)[\"gemm\"][\"fusedmul\"]\nresults_xf = @set results.benchmarkgroup = group[\"xf\"]\nresults_blas = @set results.benchmarkgroup = group[\"blas\"]\n\nlet md = sprint(export_markdown, judge(results_xf, results_blas))\n    md = replace(md, \":x:\" => \"❌\")\n    md = replace(md, \":white_check_mark:\" => \"✅\")\n    Markdown.parse(md)\nend","category":"page"}]
}
